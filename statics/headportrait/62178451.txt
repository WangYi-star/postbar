1、跨站脚本（XSS）漏洞
概括：主要出现在用户进行输入的部分。
反射型XSS利用自己创建的链接对受害用户输入的内容进行修改，在浏览器层面执行自己编写的script，进而达到盗取cookie或重要信息等目的。
存储型XSS将自己编写的script通过网站的正常信息传递方式（如发表留言）存入网站的数据库。在其他用户打开对应链接获取到含script的文本时会自动执行。




设计：主要是复现存储型XSS，含漏洞的系统对输入的信息不做任何过滤。例子为发表一段含有恶意script语句的回复，打开对应链接查看效果。
修复该漏洞的初步设计时：对所有能输入信息的组件进行关键词判断，如出现<script>等关键词，则拒绝接受对应信息，并向用户返回报错信息。

参考链接：https://blog.csdn.net/qq_35393693/article/details/86597707


2、跨站请求伪造（CSRF）漏洞
概括：CSRF攻击是源于WEB的隐式身份验证机制（cookie等）。WEB的身份验证机制虽然可以保证一个请求是来自于某个用户的浏览器，但却无法保证该请求是用户批准发送的。用户登录目标网站后，在没有退出登录的情况下访问危险网页，危险网页的页面信息则会让浏览器对目标网站发起请求，进而以用户的身份得到危险信息或做出危险操作。

设计：含漏洞的系统中，用户在登录留言板的情况下点开设计的链接，链接以用户的身份发表了一个帖子，表示被骇入。修复的系统暂定以cookie hash检测的形式确认请求拥有用户的cookie。

参考链接：https://www.cnblogs.com/hyddd/archive/2009/04/09/1432744.html


3、HTTP header 注入漏洞
概括：目标网站使用数据库存储HTTP的信息时，可以利用修改header达到数据库注入等方面的目的。

设计：含漏洞的系统中，通过header编辑软件对header进行编辑，查看网页是否会返回数据库报错信息。修复的系统暂定对header进行关键词过滤，如'、回车、换行等。

参考链接：https://blog.csdn.net/weixin_44720762/article/details/89291602
https://www.jb51.net/hack/56293.html
注：现有系统无对HTTP header的获取存储


4、目标遍历漏洞
概括：面对用户访问服务器文件的请求，如http://www.nuanyue.com/getfile=image.jgp，服务器会自动对应成本地的地址如d://site/images/image.jpg，并返回相应的文件。所以可以利用地址格式如../来构造跨文件夹的遍历，访问敏感文件。

设计：含漏洞的系统中，在常规访问的文件夹所在目录设立一个额外的目的文件夹，尝试构造地址格式来访问该文件夹中的文件。修复的系统暂定对地址进行过滤，对诸如“./”的关键词进行处理。

参考链接：https://www.cnblogs.com/s0ky1xd/p/5823685.html
注：现有系统设计暂无此功能


5、SQL注入漏洞
概括：很多场景，以登陆系统为例，输入'提前结束字符串的框定，同时输入#注释掉后面的输入内容，来改变sql语句

设计：含漏洞的系统中，在登录系统输入类似 user'# 的用户名，输入任意密码，预计会成功登录。修复的系统中，在登录界面需对各个文本框允许输入的字符进行限制。
注：视工作量以及与XSS的重复程度来考量如何覆盖其他文本输入场合

参考链接：https://blog.csdn.net/sun8890446/article/details/80684606


6、文件下载漏洞
概括：类似于4目标遍历漏洞，具体区别视参考材料

设计：同上，在设计一个下载不应被下载的文件。修复的系统暂定对申请下载的文件进行判断，同时进行类似4的关键词处理。

参考材料：https://blog.csdn.net/sun8890446/article/details/80684606


7、文件上传漏洞
概括：文件上传的WEB程序未对文件类型和格式做合法性验证，导致攻击者可以上传WEB Shell或者非期望格式的文件。

设计：在上传头像的场合，含漏洞的系统不对文件类型进行限制，尝试上传gif格式的文件作为头像。修复的系统中，对文件格式进行判断，只允许上传jpg格式的文件。


8、日志不全或无操作日志
设计：字面含义，修复的系统应对用户访问和操作有对应log记录。

https://www.polarxiong.com/archives/Flask%E4%BD%BF%E7%94%A8%E6%97%A5%E5%BF%97%E8%AE%B0%E5%BD%95%E5%88%B0%E6%96%87%E4%BB%B6%E7%A4%BA%E4%BE%8B.html

https://blog.csdn.net/qq_37816453/article/details/81867207

9、渗透测试安全漏洞系统：
设计：其实没有什么好的设计，因为留言板/论坛几乎没有隐私信息。暂时的想法是在用户信息中设置不公开的类型，只有用户本人和管理员权限的人员能够查看，其他人理应无法显示。

